Initialize a Repository: 
git init

Check the Status:        
git status

Add Changes to Staging Area: 
git add <filename>   # Add specific file
git add .            # Add all changes

Commit Changes:
git commit -m "Your commit message"

View Commit History:
git log

Amend Last Commit:
git commit --amend

Create a New Branch:
git branch new-branch-name

Switch to a Branch:
git checkout another-existing-branch-name

Create and Switch to a New Branch:
git checkout -b <branch-name>

List Branches:
git branch

Delete a Branch:
git branch -d <branch-name>

Merge a Branch into Current Branch:
git checkout <branch-to-merge-into>
git merge <branch-to-merge>

Resolve Merge Conflicts:
Open conflicted files, resolve conflicts, then:
git add <resolved-file>
git commit

Rebasing
Rebasing re-applies commits on top of another base tip.
Rebase Current Branch onto Another Branch:
git checkout <branch-to-rebase>
git rebase <base-branch>

Continue Rebase After Conflict Resolution:
git add <resolved-file>
git rebase --continue

Abort a Rebase:
git rebase --abort

git branch -v       # List branches with last commit
git remote -v       # List remote repositories

Push Changes to Remote Repository:
git push origin <branch-name>

Pull Changes from Remote Repository:
git pull origin <branch-name>

GitHub Cloning using HTTPS:
1) Fork the repository 
2) Clone the repository to your local machine
   git clone https://github.com/your-username/repo-name.git


GitHub Cloning using SSH:
1) Fork the repository 
2) Set up SSH keys
    cd ~/.ssh   OR  mkdir ~/.ssh then cd ~/.ssh
    ssh-keygen -t rsa -C "id_rsa"
    provide sec phrase to it
    ls
    cat id_rsa.pub this will give us the SSH key
    now add this key to your GitHub account 
3) Clone the repository to your local machine
    git clone git@github.com:sannis-create/Appointment-Management-System.git
   

Making Changes and Committing:
1) Navigate to the repository directory:  cd repo-name
2) Create a new branch for your changes:  git checkout -b new-feature-branch
3) Make your changes to the code
4) Stage your changes:    git add .
5) Commit your changes: git commit -m "Description of changes"


Pushing Changes:
Using HTTPS:
1) Push your changes to your fork: git push origin new-feature-branch

Using SSH:
1) Push your changes to your fork:
git push origin new-feature-branch


Creating a Pull Request
1) Navigate to your forked repository on GitHub.
2) Switch to the new branch you just pushed.
3) Click the "New pull request" button.
4) Ensure the base repository is the original repository and the 5) base branch is where you want to merge your changes.
6) Fill out the PR template and provide a description of your changes.
7) Submit the pull request.


Updating Your Fork with the Latest Changes:
1) Add the original repository as a remote:
   git remote add upstream https://github.com/original-owner/repo-name.git
2) Fetch the latest changes from the original repository
   git fetch upstream
3) Merge the changes into your local branch:
   git checkout main
   git merge upstream/main
4) Push the updated main branch to your fork:
   git push origin main


Pulling the Latest Changes:
1) Pull the latest changes from your fork  
   git pull origin main



